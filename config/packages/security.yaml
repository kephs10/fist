security:
    encoders:
        App\Entity\User:
            algorithm: auto



    role_hierarchy:
        ROLE_ADMIN:        ROLE_CAISSIER
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]


    #https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
         #used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username
        # used to reload user from session & other features (e.g. switch_user)
        # used to reload user from session & other features (e.g. switch_user)
         #used to reload user from session & other features (e.g. switch_user)
        # used to reload user from session & other features (e.g. switch_user)
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route
         
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
             #switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
          # matches /admin/admins/*
        #- {  path : '^/api/roles' ,  roles : ROLE_SUPER_ADMIN }

        # matches /admin/users/* except for anything matching the above rule
       # - {  path : '^/api/users' ,  roles : ROLE_ADMIN }
         # matches /admin/* except for anything matching the above rule
        #- {  path : '^/api/' ,  roles : ROLE_CAISSIER}
